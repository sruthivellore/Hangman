{"version":3,"sources":["components/Rules.js","components/WrongLetters.js","components/Timer.js","components/Figure.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","components/ScoreCardCounter.js","components/AlphabetList.js","components/StartPopup.js","components/Play.js","App.js","index.js"],"names":["Rules","history","useHistory","Card","className","Body","Alert","variant","Heading","Button","onClick","push","WrongLetters","wrongLetters","map","letter","i","key","reduce","prev","curr","Timer","scoreContext","useContext","ScoreContext","Header","time","name","length","Figure","errors","height","width","x1","y1","x2","y2","cx","cy","r","Word","selectedWord","correctLetters","split","console","log","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","setNum","useEffect","style","display","Notification","ScoreCardCounter","useState","start","pscore","end","score","duration","AlphabetList","props","buttonList","state","value","index","label","String","fromCharCode","classValue","generateButton","bg","text","StartPopup","show","setShow","uname","setUname","Modal","backdrop","keyboard","Title","Form","Group","controlId","Label","type","class","id","placeholder","onChange","e","target","Control","as","defaultValue","required","Footer","setName","Play","Subtitle","React","createContext","words","Math","floor","random","App","setCorrectLetters","setWrongLetters","setShowNotification","resetTimer","setResetTimer","setTime","nstart","setNstart","num","indexOf","timer","setInterval","clearInterval","initAlphabetState","alphabetState","setAlphabetState","handleKeydown","event","keyCode","newState","updateAlphabet","toLowerCase","currentLetters","dispatch","window","addEventListener","removeEventListener","setPscore","useReducer","action","Provider","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","href","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAwCeA,MArCf,WACI,IAAIC,EAAUC,cAKd,OACI,oCAAE,gCACF,kBAACC,EAAA,EAAD,CAAMC,UAAU,aACZ,kBAACD,EAAA,EAAKE,KAAN,KACA,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QACf,kBAACD,EAAA,EAAME,QAAP,wBACA,6BACA,yIAGA,sKACA,wLAGA,oJAGA,gJAGA,oJAEA,6BACA,kBAACC,EAAA,EAAD,CAAQF,QAAQ,eAAeH,UAAU,cAAcM,QA1B/D,WACIT,EAAQU,KAAK,WAyBT,SAAmF,uBAAGP,UAAU,eAAhG,KACA,6BAAK,mCClBFQ,EAbM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEtB,OACE,yBAAKT,UAAU,2BACb,6BACGS,EACEC,KAAI,SAACC,EAAQC,GAAT,OAAe,0BAAMC,IAAKD,GAAID,MAClCG,QAAO,SAACC,EAAMC,GAAP,OAAyB,OAATD,EAAgB,CAACC,GAAQ,CAACD,EAAM,KAAMC,KAAO,SCuBhEC,MA3Bf,YAAgC,IAAhBR,EAAe,EAAfA,aACNS,EAAeC,qBAAWC,GAChC,OACI,oCACA,kBAACrB,EAAA,EAAD,CAAMC,UAAU,aAChB,kBAACD,EAAA,EAAKsB,OAAN,KAAa,gCAAQ,2CAAiBH,EAAaI,KAA9B,cACrB,kBAACvB,EAAA,EAAKE,KAAN,CAAWD,UAAU,iBACrB,kBAACE,EAAA,EAAD,CAAOC,QAAQ,QACX,wCAAce,EAAaK,MAC3B,6BACA,gDACA,gCACA,kBAAClB,EAAA,EAAD,CAAQF,QAAQ,gBAAhB,SAAsC,uBAAGH,UAAU,0BAAnD,MACS,8BACRS,EAAae,OAAS,GACvB,kBAACtB,EAAA,EAAD,CAAOC,QAAQ,QACf,6CACA,6BACA,kBAAC,EAAD,CAAcM,aAAcA,SCgBzBgB,EArCA,SAAC,GAAsB,IAC9BC,EAD6B,EAAnBjB,aACYe,OAE5B,OACE,yBAAKG,OAAO,MAAMC,MAAM,MAAM5B,UAAU,oBAEtC,0BAAM6B,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OAClC,0BAAMH,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OACnC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC,0BAAMH,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAGlCN,EAAS,GACR,4BAAQO,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAG5BT,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,QAGpCN,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAErCN,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAGrCN,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAErCN,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,UCR7BI,EAvBF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAE5B,OACE,yBAAKtC,UAAU,QACZqC,EAAaE,MAAM,IAAI7B,KAAI,SAACC,EAAQC,GAEnC,OADF4B,QAAQC,IAAIH,GACE,MAAT3B,EAEC,0BAAMX,UAAU,cAAca,IAAKD,GAChC0B,EAAeI,SAAS/B,GAAUA,EAAS,IAK9C,0BAAMX,UAAU,SAASa,IAAKD,GAC3B0B,EAAeI,SAAS/B,GAAUA,EAAS,SCjBnD,SAASgC,EAAiBC,GAC/BA,GAAO,GACPC,YAAW,WACTD,GAAO,KACN,KAGE,SAASE,EAASC,EAASC,EAAOC,GACvC,IAAIC,EAAS,MAYb,OATAD,EAAKV,MAAM,IAAIY,SAAQ,SAAAxC,GACjBoC,EAAQL,SAAS/B,KACnBuC,EAAS,OAKO,IAAjBF,EAAMxB,SAAc0B,EAAS,QAEzBA,ECjBT,IAgCeE,EAhCD,SAAC,GAA0E,IAAzEd,EAAwE,EAAxEA,eAAgB7B,EAAwD,EAAxDA,aAAc4B,EAA0C,EAA1CA,aAAcgB,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UACnEC,EAAe,GACfC,EAAyB,GACzBC,GAAW,EACTvC,EAAeC,qBAAWC,GAiBhC,MAf6D,QAAzD0B,EAASR,EAAgB7B,EAAc4B,IACzCkB,EAAe,yCACfE,GAAW,EACXvC,EAAawC,OAAO,IAC8C,SAAzDZ,EAASR,EAAgB7B,EAAc4B,KAChDkB,EAAe,uCACfC,EAAsB,2BAAuBnB,GAC7CoB,GAAW,EACXvC,EAAawC,OAAO,IAGtBC,qBAAU,WACRN,EAAYI,MAIZ,yBAAKzD,UAAU,kBAAkB4D,MAAwB,KAAjBL,EAAsB,CAACM,QAAQ,QAAU,IAC/E,yBAAK7D,UAAU,SACb,4BAAKuD,GACL,4BAAKC,GACL,4BAAQlD,QAASgD,GAAjB,iBCnBOQ,EARM,SAAC,GAA0B,IAAxBnB,EAAuB,EAAvBA,iBACtB,OACE,yBAAK3C,UAAS,iCAA4B2C,EAAmB,OAAS,KACpE,qE,iCCkBSoB,MAnBf,WACI,IAAM7C,EAAeC,qBAAWC,GADR,EAGF4C,mBAAS,GAHP,mBAWxB,OAXwB,UAYpB,oCAAE,qDAA0B,0BAAMhE,UAAU,gBAAe,gCAAQ,kBAAC,IAAD,CAASiE,MAAO/C,EAAagD,OAAQC,IAAKjD,EAAakD,MAAOC,SAAU,SCwBpIC,MAjCf,SAAsBC,GACGpD,qBAAWC,GAOhC,IAAMoD,EANMD,EAAME,MAMK/D,KAAI,SAACgE,EAAMC,GAAS,OAL3C,SAAwBD,EAAMC,GAC1B,IAAIC,EAAQC,OAAOC,aAAa,GAAGH,GAC/BI,EAAaL,EAAO,gBAAgB,iBACxC,OAAQ,oCAAE,kBAAC,SAAD,CAAQE,MAAOA,EAAO5E,UAAW+E,KAEGC,CAAeN,EAAMC,MACvE,OACI,6BACI,yBAAK3E,UAAU,gBACX,kBAACD,EAAA,EAAD,CACIkF,GAAK,QACLpE,IAAI,IACJqE,KAAK,OACLtB,MAAO,CAAChC,MAAM,YAEV,kBAAC7B,EAAA,EAAKsB,OAAN,CAAarB,UAAU,aAAY,kBAAC,EAAD,OACnC,kBAACD,EAAA,EAAKE,KAAN,CAAWD,UAAU,cACrB,kBAACE,EAAA,EAAD,CAAOC,QAAQ,QAAO,gDAElB,6BACKqE,S,gBCmClBW,MA5Df,WACI,IAAMjE,EAAeC,qBAAWC,GADd,EAEM4C,mBAA4B,MAAnB9C,EAAaK,MAF5B,mBAEX6D,EAFW,KAELC,EAFK,OAGQrB,mBAAS,MAHjB,mBAGXsB,EAHW,KAGJC,EAHI,KAId1F,EAAUC,cAWd,OACI,6BAIA,kBAAC0F,EAAA,EAAD,CACIJ,KAAMA,EACNK,SAAS,SACTC,UAAU,GACV,kBAACF,EAAA,EAAMnE,OAAP,KACA,kBAACmE,EAAA,EAAMG,MAAP,4BACe,kBAACC,EAAA,EAAD,KACf,kBAACJ,EAAA,EAAMvF,KAAP,KACA,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QAGX,kBAACyF,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAClB,kBAACF,EAAA,EAAKG,MAAN,aAEA,2BAAOC,KAAK,OAAOC,MAAM,eAAeC,GAAG,OAAOC,YAAY,kBAAkB5E,KAAK,OAAO6E,SAAU,SAAAC,GAAC,OAAEd,EAASc,EAAEC,OAAO5B,WAG/H,kBAACkB,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACtB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKW,QAAN,CAAcC,GAAG,SAASC,aAAa,YAAYC,UAAQ,GACvD,6CACA,8CACA,oDAMR,kBAAClB,EAAA,EAAMmB,OAAP,KACA,kBAACtG,EAAA,EAAD,CAAQF,QAAQ,eAAeG,QA3CvC,WACIT,EAAQU,KAAK,OA0CT,SAGA,kBAACF,EAAA,EAAD,CAAQF,QAAQ,eAAeG,QA1CnB,WACN,MAAPgF,GAAwB,IAATA,IAClBpE,EAAa0F,QAAQtB,GACrBD,GAAQ,MAuCJ,eChBGwB,MA9Bf,YAA8G,IAA/FpC,EAA8F,EAA9FA,MAAOnC,EAAuF,EAAvFA,eAAgB7B,EAAuE,EAAvEA,aAAc4B,EAAyD,EAAzDA,aAAcgB,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,UAAWX,EAAmB,EAAnBA,iBAGtF,OACI,oCACA,kBAAC,EAAD,MACA,yBAAK3C,UAAU,eACf,kBAAC,EAAD,CAAOS,aAAcA,IACrB,gCACA,kBAACV,EAAA,EAAD,CAAMC,UAAU,YAChB,6BAAK,gCACL,uCAAgB,6BAChB,kBAACD,EAAA,EAAK+G,SAAN,CAAe9G,UAAU,cAAzB,0CAEA,yBAAKA,UAAU,kBACX,kBAAC,EAAD,CAAQS,aAAcA,IAEtB,kBAAC,EAAD,CAAM4B,aAAcA,EAAcC,eAAgBA,KAChD,6BAEN,+BAEA,kBAAC,EAAD,CAAcmC,MAAOA,IAErB,kBAAC,EAAD,CAAc9B,iBAAkBA,IAChC,kBAAC,EAAD,CAAOL,eAAgBA,EAAgB7B,aAAcA,EAAc4B,aAAcA,EAAcgB,YAAaA,EAAaC,UAAWA,O,gCCnB/HlC,G,MAAe2F,IAAMC,iBAE5BC,EAAQ,CAAC,kBACX5E,EAAe4E,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMzF,SA+I3C6F,MA7If,WAAgB,IAAD,EACmBrD,oBAAS,GAD5B,mBACNP,EADM,KACIJ,EADJ,OAE+BW,mBAAS,IAFxC,mBAEN1B,EAFM,KAEUgF,EAFV,OAG2BtD,mBAAS,IAHpC,mBAGNvD,EAHM,KAGQ8G,EAHR,OAImCvD,oBAAS,GAJ5C,mBAINrB,EAJM,KAIY6E,EAJZ,OAKWxD,mBAAS,MALpB,mBAKNzC,EALM,KAKAqF,EALA,OAOoB5C,oBAAS,GAP7B,mBAONyD,EAPM,KAOKC,EAPL,OAQU1D,mBAAS,GARnB,mBAQN1C,EARM,KAQDqG,EARC,OAUa3D,oBAAS,GAVtB,mBAUN4D,EAVM,KAUEC,EAVF,OAWO7D,mBAAS,GAXhB,mBAWN8D,EAXM,KAWDpE,EAXC,KAabC,qBAAU,YAC2B,IAA/BtB,EAAa0F,QAAQ,MACvBT,EAAkB,CAAC,QAErB,IAEF3D,qBAAU,WACR,GAAGiE,EAAO,CAER,IAAMI,EAAQ1G,EAAO,KAASmG,GAAcQ,aAAY,kBAAMN,EAAQrG,EAAKwG,KAAM,KAGjF,OAFAtF,QAAQC,IAAIuF,GACZxF,QAAQC,IAAIqF,GACN,WACJtF,QAAQC,IAAI,oBACZyF,cAAcF,GACdN,GAAc,OAGlB,CAACpG,EAAKmG,EAAWG,IAGnB,IADA,IAAIO,EAAkB,GACdvH,EAAG,EAAEA,EAAE,GAAGA,IAChBuH,EAAkB5H,MAAK,GAnCZ,MAqC2ByD,mBAASmE,GArCpC,mBAqCNC,GArCM,KAqCSC,GArCT,KA8Cb1E,qBAAU,WACR,GAAW,MAARpC,EAAH,CAEA,IAAM+G,EAAgB,SAAAC,GACpBV,GAAU,GADmB,IAErBhH,EAAiB0H,EAAjB1H,IAAK2H,EAAYD,EAAZC,QACb,GAAI/E,GAAY+E,GAAW,IAAMA,GAAW,GAAI,EAbpD,SAAwB9D,GACtB,IACI+D,EAAWL,GACfK,EAFiB/D,EAAM,KAEF,EACrB2D,GAAiBI,GAUbC,CAAeF,GACf,IAAM7H,EAASE,EAAI8H,cACftG,EAAaK,SAAS/B,GACnB2B,EAAeI,SAAS/B,GAI3ByE,EAAKoC,IAHLF,GAAkB,SAAAsB,GAAc,4BAAQA,GAAR,CAAwBjI,OACxDkI,GAAS,cAKNpI,EAAaiC,SAAS/B,GAIzByE,EAAKoC,IAHLD,GAAgB,SAAAqB,GAAc,4BAAQA,GAAR,CAAwBjI,OACtDkI,GAAS,gBASjB,OAFAC,OAAOC,iBAAiB,UAAWT,GAE5B,kBAAMQ,OAAOE,oBAAoB,UAAWV,OAClD,CAAChG,EAAgB7B,EAAcgD,EAAU2E,GAAc7G,IA3E7C,OAkGcyC,mBAAS,GAlGvB,qBAkGNE,GAlGM,MAkGC+E,GAlGD,SA8GYC,sBAVN,SAACzE,EAAM0E,GAEtB,OADFF,GAAUxE,GACI,cAAT0E,EACM1E,EAAM,EACH,cAAT0E,EACM1E,EAAM,EANA,OAnGN,qBA8GNL,GA9GM,MA8GAyE,GA9GA,MAgHb,OACE,oCACE,kBAACzH,EAAagI,SAAd,CAAuB1E,MAAO,CAACN,MAAMA,GAAMF,OAAOA,GAAO5C,KAAKA,EAAKoC,OAAOA,EAAOnC,KAAKA,EAAKqF,QAAQA,IACnG,kBAACyC,EAAA,EAAD,CAAQrJ,UAAU,SAASiF,GAAG,OAAOqE,OAAO,KAAKnJ,QAAQ,QACvD,kBAACkJ,EAAA,EAAOE,MAAR,qBACA,kBAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,0BAC7B,kBAACJ,EAAA,EAAOK,SAAR,CAAiBxD,GAAG,yBAClB,kBAACyD,EAAA,EAAD,CAAK3J,UAAU,WACb,kBAAC2J,EAAA,EAAIC,KAAL,CAAUC,KAAK,KAAf,IAAoB,uBAAG7J,UAAU,cAAb,WACpB,kBAAC2J,EAAA,EAAIC,KAAL,CAAUC,KAAK,SAAf,WAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAAC,EAAD,CAAMrF,MAAO2D,GAAe3H,aAAcA,EAAc4B,aAAcA,EAAcC,eAAgBA,EAAgBe,YAAaA,EAAaC,UApDtJ,WAIED,GAAY,GACZiE,EAAkB,IAClBC,EAAgB,IAChBc,GAAiBF,GACjBT,GAAc,GACdC,EAAQ,GACRE,GAAU,GACVnE,EAAO,GAEP,IAAM0D,EAASF,KAAKC,MAAMD,KAAKE,SAAWH,EAAMzF,SAEb,KADnCa,EAAe4E,EAAMG,IACJW,QAAQ,MACvBT,EAAkB,CAAC,OAoCqJ3E,iBAAkBA,KAEtL,kBAAC,IAAD,CAAOmH,KAAK,KACV,kBAAC,EAAD,Y,YCrJZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a3ce1d81.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, Alert, Button} from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Rules() {\r\n    let history = useHistory();\r\n\r\n    function handleClick() {\r\n        history.push(\"/play\");\r\n    }\r\n    return (\r\n        <><center>\r\n        <Card className=\"rulesCard\">\r\n            <Card.Body>\r\n            <Alert variant=\"info\">\r\n            <Alert.Heading>Playing Hangman</Alert.Heading>\r\n            <hr />\r\n            <p>\r\n            Hangman is an old school favorite, a word game where the goal is simply to find the missing word or words.</p>\r\n            \r\n            <p>You will be presented with a number of blank spaces representing the missing letters you need to find by guessing one letter at a time.</p>\r\n            <p>Use the keyboard to guess a letter. If your chosen letter exists in the answer, then all places in the answer where that letter appears will be revealed.\r\n            </p>\r\n\r\n            <p>After you've revealed several letters, you may be able to guess what the answer is and fill in the remaining letters. \r\n            </p>\r\n\r\n            <p>Be warned, every time you guess a letter wrong you loose a life and the hangman begins to appear, piece by piece.\r\n            </p>\r\n\r\n            <p>Solve the puzzle before the hangman dies. Remember to keep the theme in mind – it may help you solve the puzzle!\r\n            </p>\r\n            <hr />\r\n            <Button variant=\"outline-info\" className=\"float-right\" onClick={handleClick}> Play <i className=\"pi pi-play\"></i> </Button>\r\n            <br/><br/></Alert>\r\n            </Card.Body>\r\n        </Card></center>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Rules\r\n","import React from 'react'\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n\r\n  return (\r\n    <div className=\"wrong-letters-container\">\r\n      <div>\r\n        {wrongLetters\r\n          .map((letter, i) => <span key={i}>{letter}</span>)\r\n          .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React,{useContext} from 'react'\r\nimport {Card, Alert, Button} from 'react-bootstrap';\r\nimport {ScoreContext} from '../App';\r\nimport WrongLetters from './WrongLetters';\r\n\r\nfunction Timer({wrongLetters}) {\r\n    const scoreContext = useContext(ScoreContext);\r\n    return (\r\n        <>\r\n        <Card className=\"timerCard\">\r\n        <Card.Header><center><strong>Timer : {scoreContext.time} Seconds</strong></center></Card.Header>\r\n        <Card.Body className=\"timerCardBody\" >\r\n        <Alert variant=\"dark\">\r\n            <h5>Welcome, {scoreContext.name}</h5>\r\n            <hr />\r\n            <p>All the Best....!</p>\r\n            <center>\r\n            <Button variant=\"outline-info\" > Hint <i className=\"pi pi-question-circle\"></i> </Button>\r\n            </center><br/></Alert>\r\n            {wrongLetters.length > 0 && \r\n            <Alert variant=\"dark\">\r\n            <h6>Wrong Letters</h6>\r\n            <hr />\r\n            <WrongLetters wrongLetters={wrongLetters} />\r\n            </Alert>}\r\n        </Card.Body>\r\n        </Card>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n  const errors = wrongLetters.length\r\n\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/* <!-- Rod --> */}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n      {/* <!-- Head --> */}\r\n      {errors > 0 &&\r\n        <circle cx=\"140\" cy=\"70\" r=\"20\" />\r\n      }\r\n      {/* <!-- Body --> */}\r\n      {errors > 1 &&\r\n        <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />\r\n      }\r\n      {/* <!-- Arms --> */}\r\n      {errors > 2 &&\r\n        <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />\r\n      }\r\n      {errors > 3 &&\r\n        <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />\r\n      }\r\n      {/* <!-- Legs --> */}\r\n      {errors > 4 &&\r\n        <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />\r\n      }\r\n      {errors > 5 &&\r\n        <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />\r\n      }\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react';\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n\r\n  return (\r\n    <div className=\"word\">\r\n      {selectedWord.split('').map((letter, i) => {\r\n      console.log(correctLetters)\r\n        if(letter===' ')\r\n          return (\r\n            <span className=\"letterSpace\" key={i}>\r\n              {correctLetters.includes(letter) ? letter : ''}\r\n            </span>\r\n          )\r\n        else\r\n          return (\r\n            <span className=\"letter\" key={i}>\r\n              {correctLetters.includes(letter) ? letter : ''}\r\n            </span>\r\n          )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Word\r\n","export function showNotification(setter) {\r\n  setter(true);\r\n  setTimeout(() => {\r\n    setter(false);\r\n  }, 2000);\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = 'win';\r\n\r\n  // Check for win\r\n  word.split('').forEach(letter => {\r\n    if(!correct.includes(letter)){\r\n      status = '';\r\n    }\r\n  });\r\n  \r\n  // Check for lose\r\n  if(wrong.length === 6) status = 'lose';\r\n\r\n  return status\r\n}","import React, { useEffect, useContext } from 'react';\r\nimport { checkWin } from '../helpers/helpers';\r\nimport {ScoreContext} from '../App';\r\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable, playAgain}) => {\r\n  let finalMessage = '';\r\n  let finalMessageRevealWord = '';\r\n  let playable = true;\r\n  const scoreContext = useContext(ScoreContext);\r\n\r\n  if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win' ) {\r\n    finalMessage = 'Congratulations! You won! 😃';\r\n    playable = false;\r\n    scoreContext.setNum(0);\r\n  } else if( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose' ) {\r\n    finalMessage = 'Unfortunately you lost. 😕';\r\n    finalMessageRevealWord = `...the word was: ${selectedWord}`;\r\n    playable = false;\r\n    scoreContext.setNum(0);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPlayable(playable);\r\n  });\r\n\r\n  return (\r\n    <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}}>\r\n      <div className=\"popup\">\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{finalMessageRevealWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popup\r\n","import React from 'react'\r\n\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, {useState, useContext} from 'react';\r\nimport CountUp from 'react-countup';\r\nimport {ScoreContext} from '../App';\r\n\r\nfunction ScoreCardCounter() {\r\n    const scoreContext = useContext(ScoreContext);\r\n\r\n    const [time, setTime]=useState(0);\r\n\r\n    function timer(){\r\n        setTime(time+1);\r\n    }\r\n    function startTimer(){\r\n        let interval = setInterval(timer, 1000)\r\n    };\r\n    return (\r\n        <><p>Your Current Score :   <span className=\"setScoreFont\"><strong><CountUp start={scoreContext.pscore} end={scoreContext.score} duration={1}></CountUp>         \r\n            </strong></span>\r\n            </p>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScoreCardCounter\r\n","import React,{useContext} from 'react';\r\nimport {Card, Alert} from 'react-bootstrap';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport { Button } from 'primereact/button';\r\nimport ScoreCardCounter from './ScoreCardCounter';\r\nimport {ScoreContext} from '../App';\r\n\r\nfunction AlphabetList(props) {\r\n    const scoreContext = useContext(ScoreContext);\r\n    var state = props.state;\r\n    function generateButton(value,index){\r\n        var label = String.fromCharCode(65+index);\r\n        var classValue = value ?\"alphButEnable\":\"alphButDisable\"\r\n        return (<><Button label={label} className={classValue} /></>)\r\n    }\r\n    const buttonList=state.map((value,index)=>{return(generateButton(value,index))})\r\n    return (\r\n        <div>\r\n            <div className=\"alphabetList\">\r\n                <Card\r\n                    bg = \"light\"\r\n                    key=\"1\"\r\n                    text=\"dark\"\r\n                    style={{width:'15.5rem'}}\r\n                    >\r\n                        <Card.Header className=\"alphaCard\"><ScoreCardCounter></ScoreCardCounter></Card.Header>\r\n                        <Card.Body className=\"alphaCard1\">\r\n                        <Alert variant=\"dark\"><center>\r\n                            Alphabet List\r\n                            <hr />                      \r\n                                {buttonList}</center>\r\n                         </Alert>   \r\n                        </Card.Body>\r\n                    </Card>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlphabetList\r\n","import React,{useEffect, useState, useContext} from 'react'\r\nimport {Alert, Button, Modal, Form} from 'react-bootstrap';            \r\nimport { useHistory } from \"react-router-dom\";\r\nimport {ScoreContext} from '../App';\r\n\r\nfunction StartPopup() {\r\n    const scoreContext = useContext(ScoreContext);\r\n    const [show, setShow] = useState(scoreContext.name==null);\r\n    const [uname, setUname] = useState(null);\r\n    let history = useHistory();\r\n\r\n    function handleRules() {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const handleClose = () => {\r\n        if(uname!=null && uname != ''){\r\n        scoreContext.setName(uname)\r\n        setShow(false);}\r\n    }\r\n    return (\r\n        <div>\r\n        {/* <Button variant=\"primary\" onClick={handleShow}>\r\n            Launch static backdrop modal\r\n        </Button> */}\r\n        <Modal\r\n            show={show}\r\n            backdrop=\"static\"\r\n            keyboard={false}>\r\n            <Modal.Header>\r\n            <Modal.Title>Welcome to Hangman</Modal.Title>\r\n            </Modal.Header><Form>\r\n            <Modal.Body>\r\n            <Alert variant=\"info\">\r\n            \r\n                \r\n                <Form.Group controlId=\"formGridName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    \r\n                    <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter your Name\" name=\"name\" onChange={e=>setUname(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Theme\">\r\n                <Form.Label>Theme</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Choose...\" required>\r\n                    <option>Choose...</option>\r\n                    <option>Technology</option>\r\n                    <option>Social Media</option>\r\n                </Form.Control>\r\n                </Form.Group>\r\n                \r\n            </Alert>   \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"outline-dark\" onClick={handleRules}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"outline-info\" onClick={handleClose}> Play </Button>\r\n            </Modal.Footer></Form>\r\n        </Modal>\r\n               \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartPopup\r\n","import React, { useState, useEffect,useReducer } from 'react';\r\nimport Timer from './Timer';\r\nimport Figure from './Figure';\r\nimport WrongLetters from './WrongLetters';\r\nimport Word from './Word';\r\nimport Popup from './Popup';\r\nimport Notification from './Notification';\r\nimport AlphabetList from './AlphabetList';\r\nimport {Card, Alert, Button} from 'react-bootstrap';\r\nimport StartPopup from './StartPopup';\r\n\r\nfunction Play({state, correctLetters, wrongLetters, selectedWord, setPlayable, playAgain, showNotification}) {\r\n    \r\n\r\n    return (\r\n        <>\r\n        <StartPopup></StartPopup>\r\n        <div className=\"setAllCards\">\r\n        <Timer wrongLetters={wrongLetters}/>\r\n        <center>\r\n        <Card className=\"gameCard\">\r\n        <br/><center>\r\n        <h2>Hangman</h2><br></br>\r\n        <Card.Subtitle className=\"text-muted\">Find the hidden word - Enter a letter</Card.Subtitle></center>\r\n        \r\n        <div className=\"game-container\">\r\n            <Figure wrongLetters={wrongLetters} />\r\n            {/* <WrongLetters wrongLetters={wrongLetters} /> */}\r\n            <Word selectedWord={selectedWord} correctLetters={correctLetters} />\r\n        </div><br></br>\r\n        \r\n        <br/>\r\n        </Card></center>\r\n        <AlphabetList state={state}></AlphabetList>\r\n\r\n        <Notification showNotification={showNotification} />\r\n        <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\r\n        </div></>\r\n    )\r\n}\r\n\r\nexport default Play\r\n","import React, { useState, useEffect,useReducer } from 'react';\r\nimport Rules from './components/Rules';\r\nimport Play from './components/Play';\r\nimport { showNotification as show, checkWin } from './helpers/helpers';\r\n\r\nimport {Nav, Navbar} from 'react-bootstrap'\r\nimport { PrimeIcons } from 'primereact/api';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nexport const ScoreContext = React.createContext();\r\n\r\nconst words = ['sruthi vellore'];\r\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\r\n\r\nfunction App() {\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [wrongLetters, setWrongLetters] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const [name, setName] = useState(null);\r\n\r\n  const [resetTimer,setResetTimer]=useState(true);\r\n  const [time,setTime] = useState(0);\r\n  var doStart=0;\r\n  const [nstart, setNstart]=useState(false);\r\n  const [num, setNum]=useState(1);\r\n\r\n  useEffect(()=>{\r\n    if (selectedWord.indexOf(' ') !== -1) {\r\n      setCorrectLetters([\" \"]);\r\n    } \r\n  },[])\r\n\r\n  useEffect(()=> {\r\n    if(nstart){\r\n      \r\n      const timer = time < 10000 && resetTimer && setInterval(() => setTime(time+num), 1000);\r\n      console.log(timer);\r\n      console.log(num);\r\n      return() => {\r\n        console.log(\"Calling return..\");\r\n        clearInterval(timer)\r\n        setResetTimer(true)\r\n      };\r\n    }\r\n  },[time,resetTimer,nstart]);\r\n\r\n  var initAlphabetState=[]\r\n  for(var i =0;i<26;i++){\r\n    initAlphabetState.push(true)\r\n  }\r\n  const [alphabetState, setAlphabetState]=useState(initAlphabetState);\r\n\r\n  function updateAlphabet(value){\r\n    var newKeyCode = value-65;\r\n    var newState = alphabetState;\r\n    newState[newKeyCode]=false;\r\n    setAlphabetState(newState);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(name == null)\r\n      return\r\n    const handleKeydown = event => {\r\n      setNstart(true);\r\n      const { key, keyCode } = event;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        updateAlphabet(keyCode);\r\n        const letter = key.toLowerCase();\r\n        if (selectedWord.includes(letter)) {\r\n          if (!correctLetters.includes(letter)) {\r\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\r\n            dispatch('increment');\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        } else {\r\n          if (!wrongLetters.includes(letter)) {\r\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\r\n            dispatch('decrement');\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => window.removeEventListener('keydown', handleKeydown);\r\n  }, [correctLetters, wrongLetters, playable, alphabetState,name]);\r\n\r\n  function playAgain() {\r\n    \r\n\r\n    // Empty Arrays\r\n    setPlayable(true);\r\n    setCorrectLetters([]);\r\n    setWrongLetters([]);\r\n    setAlphabetState(initAlphabetState);\r\n    setResetTimer(false);\r\n    setTime(0);\r\n    setNstart(false);\r\n    setNum(1);\r\n\r\n    const random = Math.floor(Math.random() * words.length);\r\n    selectedWord = words[random];\r\n    if (selectedWord.indexOf(' ') !== -1) {\r\n      setCorrectLetters([\" \"]);\r\n    } \r\n    \r\n  }\r\n\r\n  const [pscore,setPscore] = useState(0);\r\n  const scoreInitial=0;\r\n  const scoreReducer=(state,action)=>{\r\n    setPscore(state)\r\n      if(action==='increment')\r\n        return(state+5);\r\n      if(action==='decrement')\r\n        return(state-3);\r\n      else\r\n        return(scoreInitial);\r\n  }\r\n\r\n  const [score,dispatch] = useReducer(scoreReducer,scoreInitial)\r\n\r\n  return (\r\n    <>\r\n      <ScoreContext.Provider value={{score:score,pscore:pscore,time:time,setNum:setNum,name:name,setName:setName}}>\r\n      <Navbar className='NavBar' bg=\"dark\" expand=\"sm\" variant=\"dark\">\r\n        <Navbar.Brand >Hangman Game</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\"> <i className=\"pi pi-home\"> Rules</i></Nav.Link>\r\n            <Nav.Link href=\"/play\">Play</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      \r\n      <Router>\r\n        <Switch>\r\n        <Route path=\"/play\">\r\n          <Play state={alphabetState} wrongLetters={wrongLetters} selectedWord={selectedWord} correctLetters={correctLetters} setPlayable={setPlayable} playAgain={playAgain} showNotification={showNotification}/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Rules />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n    </ScoreContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'primeicons/primeicons.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}