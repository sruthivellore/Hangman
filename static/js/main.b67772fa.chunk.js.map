{"version":3,"sources":["components/Rules.js","components/WrongLetters.js","components/Timer.js","components/Figure.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","components/ScoreCardCounter.js","components/AlphabetList.js","components/StartPopup.js","components/Play.js","App.js","index.js"],"names":["Rules","history","useHistory","Card","className","Body","Alert","variant","Heading","Button","onClick","push","WrongLetters","wrongLetters","map","letter","i","key","reduce","prev","curr","Timer","scoreContext","useContext","ScoreContext","selectedWordDef","console","log","Header","time","name","OverlayTrigger","trigger","placement","overlay","Popover","id","Content","description","length","Figure","errors","height","width","x1","y1","x2","y2","cx","cy","r","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","temp","setNum","useEffect","style","display","Notification","ScoreCardCounter","useState","start","pscore","end","score","duration","AlphabetList","props","buttonList","state","value","index","label","String","fromCharCode","classValue","generateButton","bg","text","StartPopup","show","setShow","uname","setUname","utheme","setUtheme","Modal","backdrop","keyboard","Title","Form","Group","controlId","Label","Control","size","type","placeholder","onChange","e","target","as","defaultValue","Footer","setName","setTheme","Play","theme","Subtitle","React","createContext","words","myData","technology","Math","floor","random","toLowerCase","App","setCorrectLetters","setWrongLetters","setShowNotification","wordSel","setWordSel","resetTimer","setResetTimer","setTime","nstart","setNstart","num","social","indexOf","timer","setInterval","clearInterval","initAlphabetState","alphabetState","setAlphabetState","handleKeydown","event","keyCode","newState","updateAlphabet","currentLetters","dispatch","window","addEventListener","removeEventListener","setPscore","useReducer","action","Provider","basename","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y3RAwCeA,MArCf,WACI,IAAIC,EAAUC,cAKd,OACI,oCAAE,gCACF,kBAACC,EAAA,EAAD,CAAMC,UAAU,aACZ,kBAACD,EAAA,EAAKE,KAAN,KACA,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QACf,kBAACD,EAAA,EAAME,QAAP,wBACA,6BACA,yIAGA,sKACA,wLAGA,oJAGA,gJAGA,oJAEA,6BACA,kBAACC,EAAA,EAAD,CAAQF,QAAQ,eAAeH,UAAU,cAAcM,QA1B/D,WACIT,EAAQU,KAAK,WAyBT,SAAmF,uBAAGP,UAAU,eAAhG,KACA,6BAAK,mC,gBClBFQ,EAbM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEtB,OACE,yBAAKT,UAAU,2BACb,6BACGS,EACEC,KAAI,SAACC,EAAQC,GAAT,OAAe,0BAAMC,IAAKD,GAAID,MAClCG,QAAO,SAACC,EAAMC,GAAP,OAAyB,OAATD,EAAgB,CAACC,GAAQ,CAACD,EAAM,KAAMC,KAAO,SCwChEC,MA5Cf,YAAgC,IAAhBR,EAAe,EAAfA,aACNS,EAAeC,qBAAWC,GAEhC,OADWF,EAAaG,gBAEpB,oCACCC,QAAQC,IAAIL,GACb,kBAACnB,EAAA,EAAD,CAAMC,UAAU,aAChB,kBAACD,EAAA,EAAKyB,OAAN,KAAa,gCAAQ,2CAAiBN,EAAaO,KAA9B,cACrB,kBAAC1B,EAAA,EAAKE,KAAN,CAAWD,UAAU,iBACrB,kBAACE,EAAA,EAAD,CAAOC,QAAQ,QACX,wCAAce,EAAaQ,MAC3B,6BACA,gDACA,gCACA,kBAACC,EAAA,EAAD,CACAC,QAAQ,QACRf,IAAI,SACJgB,UAAU,SACVC,QACI,kBAACC,EAAA,EAAD,CAASC,GAAG,6BAEZ,kBAACD,EAAA,EAAQE,QAAT,KACQf,EAAaG,iBAAqBH,EAAaG,gBAAiBa,eAK5E,kBAAC7B,EAAA,EAAD,CAAQF,QAAQ,gBAAhB,SAAsC,uBAAGH,UAAU,0BAAnD,OAGS,8BACRS,EAAa0B,OAAS,GACvB,kBAACjC,EAAA,EAAD,CAAOC,QAAQ,QACf,6CACA,6BACA,kBAAC,EAAD,CAAcM,aAAcA,SCDzB2B,EArCA,SAAC,GAAsB,IAC9BC,EAD6B,EAAnB5B,aACY0B,OAE5B,OACE,yBAAKG,OAAO,MAAMC,MAAM,MAAMvC,UAAU,oBAEtC,0BAAMwC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OAClC,0BAAMH,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OACnC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC,0BAAMH,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAGlCN,EAAS,GACR,4BAAQO,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAG5BT,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,QAGpCN,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAErCN,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAGrCN,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAErCN,EAAS,GACR,0BAAMG,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,UCT7BI,EAtBF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAE5B,OACE,yBAAKjD,UAAU,QACZgD,EAAaE,MAAM,IAAIxC,KAAI,SAACC,EAAQC,GACnC,MAAY,MAATD,EAEC,0BAAMX,UAAU,cAAca,IAAKD,GAChCqC,EAAeE,SAASxC,GAAUA,EAAS,IAK9C,0BAAMX,UAAU,SAASa,IAAKD,GAC3BqC,EAAeE,SAASxC,GAAUA,EAAS,SChBnD,SAASyC,EAAiBC,GAC/BA,GAAO,GACPC,YAAW,WACTD,GAAO,KACN,KAGE,SAASE,EAASC,EAASC,EAAOC,GACvC,IAAIC,EAAS,MAYb,OATAD,EAAKR,MAAM,IAAIU,SAAQ,SAAAjD,GACjB6C,EAAQL,SAASxC,KACnBgD,EAAS,OAKO,IAAjBF,EAAMtB,SAAcwB,EAAS,QAEzBA,ECjBT,IAgCeE,EAhCD,SAAC,GAA0E,IAAzEZ,EAAwE,EAAxEA,eAAgBxC,EAAwD,EAAxDA,aAAcuC,EAA0C,EAA1CA,aAAcc,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UACnEC,EAAe,GACfC,EAAyB,GACzBC,GAAW,EACThD,EAAeC,qBAAWC,GAC5B+C,EAAOjD,EAAaG,gBAgBxB,MAf6D,QAAzDkC,EAASN,EAAgBxC,EAAcuC,IACzCgB,EAAe,yCACfE,GAAW,EACXhD,EAAakD,OAAO,IAC8C,SAAzDb,EAASN,EAAgBxC,EAAcuC,KAChDgB,EAAe,uCACfC,EAAsB,2BAAuBE,EAAKT,MAClDQ,GAAW,EACXhD,EAAakD,OAAO,IAGtBC,qBAAU,WACRP,EAAYI,MAIZ,yBAAKlE,UAAU,kBAAkBsE,MAAwB,KAAjBN,EAAsB,CAACO,QAAQ,QAAU,IAC/E,yBAAKvE,UAAU,SACb,4BAAKgE,GACL,4BAAKC,GACL,4BAAQ3D,QAASyD,GAAjB,iBCnBOS,EARM,SAAC,GAA0B,IAAxBpB,EAAuB,EAAvBA,iBACtB,OACE,yBAAKpD,UAAS,iCAA4BoD,EAAmB,OAAS,KACpE,qE,iCCkBSqB,MAnBf,WACI,IAAMvD,EAAeC,qBAAWC,GADR,EAGFsD,mBAAS,GAHP,mBAWxB,OAXwB,UAYpB,oCAAE,qDAA0B,0BAAM1E,UAAU,gBAAe,gCAAQ,kBAAC,IAAD,CAAS2E,MAAOzD,EAAa0D,OAAQC,IAAK3D,EAAa4D,MAAOC,SAAU,SCwBpIC,MAjCf,SAAsBC,GACG9D,qBAAWC,GAOhC,IAAM8D,EANMD,EAAME,MAMKzE,KAAI,SAAC0E,EAAMC,GAAS,OAL3C,SAAwBD,EAAMC,GAC1B,IAAIC,EAAQC,OAAOC,aAAa,GAAGH,GAC/BI,EAAaL,EAAO,gBAAgB,iBACxC,OAAQ,oCAAE,kBAAC,SAAD,CAAQE,MAAOA,EAAOtF,UAAWyF,KAEGC,CAAeN,EAAMC,MACvE,OACI,6BACI,yBAAKrF,UAAU,gBACX,kBAACD,EAAA,EAAD,CACI4F,GAAK,QACL9E,IAAI,IACJ+E,KAAK,OACLtB,MAAO,CAAC/B,MAAM,YAEV,kBAACxC,EAAA,EAAKyB,OAAN,CAAaxB,UAAU,aAAY,kBAAC,EAAD,OACnC,kBAACD,EAAA,EAAKE,KAAN,CAAWD,UAAU,cACrB,kBAACE,EAAA,EAAD,CAAOC,QAAQ,QAAO,gDAElB,6BACK+E,S,gBCsClBW,MA/Df,WACI,IAAM3E,EAAeC,qBAAWC,GADd,EAEMsD,mBAA4B,MAAnBxD,EAAaQ,MAF5B,mBAEXoE,EAFW,KAELC,EAFK,OAGQrB,mBAAS,MAHjB,mBAGXsB,EAHW,KAGJC,EAHI,OAIUvB,mBAAS,cAJnB,mBAIXwB,EAJW,KAIHC,EAJG,KAKdtG,EAAUC,cAYd,OACI,6BAIA,kBAACsG,EAAA,EAAD,CACIN,KAAMA,EACNO,SAAS,SACTC,UAAU,GACV,kBAACF,EAAA,EAAM5E,OAAP,KACA,kBAAC4E,EAAA,EAAMG,MAAP,4BAEA,kBAACH,EAAA,EAAMnG,KAAP,KACA,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QAEf,kBAACqG,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAClB,kBAACF,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,KAAKC,KAAK,OAAOC,YAAY,kBAAkBC,SAAU,SAAAC,GAAC,OAAEhB,EAASgB,EAAEC,OAAO9B,WAIrG,kBAACoB,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACtB,kBAACF,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAcO,GAAG,SAASC,aAAa,iBAAiBP,KAAK,KAAKG,SAAU,SAAAC,GAAC,OAAEd,EAAUc,EAAEC,OAAO9B,SAC9F,4BAAQA,MAAM,cAAd,kBACA,4BAAQA,MAAM,cAAd,oCACA,4BAAQA,MAAM,UAAd,qBAOR,kBAACgB,EAAA,EAAMiB,OAAP,KACA,kBAAChH,EAAA,EAAD,CAAQF,QAAQ,eAAeG,QA7CvC,WACIT,EAAQU,KAAK,OA4CT,SAGA,kBAACF,EAAA,EAAD,CAAQF,QAAQ,eAAeG,QA5CnB,WACN,MAAP0F,GAAwB,IAATA,IAClB9E,EAAaoG,QAAQtB,GACrB9E,EAAaqG,SAASrB,GACtBH,GAAQ,MAwCJ,cCpBGyB,MA9Bf,YAAoH,IAArGrC,EAAoG,EAApGA,MAAMsC,EAA8F,EAA9FA,MAAOxE,EAAuF,EAAvFA,eAAgBxC,EAAuE,EAAvEA,aAAcuC,EAAyD,EAAzDA,aAAcc,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,UAAWX,EAAmB,EAAnBA,iBAG5F,OADA9B,QAAQC,IAAIkG,GAER,oCACA,kBAAC,EAAD,MACA,yBAAKzH,UAAU,eACf,kBAAC,EAAD,CAAOS,aAAcA,IACrB,gCACA,kBAACV,EAAA,EAAD,CAAMC,UAAU,YAChB,6BAAK,gCACL,uCAAgB,6BAChB,kBAACD,EAAA,EAAK2H,SAAN,CAAe1H,UAAU,cAAzB,0CAEA,yBAAKA,UAAU,kBACX,kBAAC,EAAD,CAAQS,aAAcA,IAEtB,kBAAC,EAAD,CAAMuC,aAAcA,EAAcC,eAAgBA,KAChD,6BAEN,+BAEA,kBAAC,EAAD,CAAckC,MAAOA,IAErB,kBAAC,EAAD,CAAc/B,iBAAkBA,IAChC,kBAAC,EAAD,CAAOH,eAAgBA,EAAgBxC,aAAcA,EAAcuC,aAAcA,EAAcc,YAAaA,EAAaC,UAAWA,O,wCCjB/H3C,EAAeuG,IAAMC,gBAE9BC,EAAOC,EAAOC,WACd1G,EAAkBwG,EAAMG,KAAKC,MAAMD,KAAKE,SAAWL,EAAM1F,SACzDa,EAAe3B,EAAgBqC,KACnCV,EAAeA,EAAamF,cAyKbC,MAvKf,WAAgB,IAAD,EACmB1D,oBAAS,GAD5B,mBACNR,EADM,KACIJ,EADJ,OAE+BY,mBAAS,IAFxC,mBAENzB,EAFM,KAEUoF,EAFV,OAG2B3D,mBAAS,IAHpC,mBAGNjE,EAHM,KAGQ6H,EAHR,OAImC5D,oBAAS,GAJ5C,mBAINtB,EAJM,KAIYmF,EAJZ,OAKW7D,mBAAS,MALpB,mBAKNhD,EALM,KAKA4F,EALA,OAMa5C,mBAAS,cANtB,mBAMN+C,EANM,KAMCF,EAND,OAOc7C,oBAAS,GAPvB,mBAON8D,EAPM,KAOEC,EAPF,OAQoB/D,oBAAS,GAR7B,mBAQNgE,EARM,KAQKC,EARL,OASUjE,mBAAS,GATnB,mBASNjD,EATM,KASDmH,EATC,OAWalE,oBAAS,GAXtB,mBAWNmE,GAXM,KAWEC,GAXF,QAYOpE,mBAAS,GAZhB,qBAYNqE,GAZM,MAYD3E,GAZC,MAcbC,qBAAU,WACK,WAAVoD,IACDI,EAAQC,EAAOkB,OACf1H,QAAQC,IAAIsG,GACZxG,EAAkBwG,EAAMG,KAAKC,MAAMD,KAAKE,SAAWL,EAAM1F,SAEzDa,GADAA,EAAe3B,EAAgBqC,MACHyE,cAC5BM,GAAW,KAEsB,IAA/BzF,EAAaiG,QAAQ,MACvBZ,EAAkB,CAAC,QAErB,CAACZ,IAIHpD,qBAAU,WACR,GAAGwE,GAAO,CAER,IAAMK,EAAQzH,EAAO,KAASiH,GAAcS,aAAY,kBAAMP,EAAQnH,EAAKsH,MAAM,KAGjF,OAFAzH,QAAQC,IAAI2H,GACZ5H,QAAQC,IAAIwH,IACN,WACJzH,QAAQC,IAAI,oBACZ6H,cAAcF,GACdP,GAAc,OAGlB,CAAClH,EAAKiH,EAAWG,KAGnB,IADA,IAAIQ,GAAkB,GACdzI,GAAG,EAAEA,GAAE,GAAGA,KAChByI,GAAkB9I,MAAK,GA9CZ,OAgD2BmE,mBAAS2E,IAhDpC,qBAgDNC,GAhDM,MAgDSC,GAhDT,MAyDblF,qBAAU,WACR,GAAW,MAAR3C,EAAH,CAEA,IAAM8H,EAAgB,SAAAC,GACpBX,IAAU,GADmB,IAErBjI,EAAiB4I,EAAjB5I,IAAK6I,EAAYD,EAAZC,QACb,GAAIxF,GAAYwF,GAAW,IAAMA,GAAW,GAAI,EAbpD,SAAwBtE,GACtB,IACIuE,EAAWL,GACfK,EAFiBvE,EAAM,KAEF,EACrBmE,GAAiBI,GAUbC,CAAeF,GACf,IAAM/I,EAASE,EAAIsH,cACfnF,EAAaG,SAASxC,GACnBsC,EAAeE,SAASxC,GAI3BmF,EAAKyC,IAHLF,GAAkB,SAAAwB,GAAc,4BAAQA,GAAR,CAAwBlJ,OACxDmJ,GAAS,cAKNrJ,EAAa0C,SAASxC,GAIzBmF,EAAKyC,IAHLD,GAAgB,SAAAuB,GAAc,4BAAQA,GAAR,CAAwBlJ,OACtDmJ,GAAS,gBASjB,OAFAC,OAAOC,iBAAiB,UAAWR,GAE5B,kBAAMO,OAAOE,oBAAoB,UAAWT,OAClD,CAACvG,EAAgBxC,EAAcyD,EAAUoF,GAAc5H,EAAK8G,IAtFlD,OA+Gc9D,mBAAS,GA/GvB,qBA+GNE,GA/GM,MA+GCsF,GA/GD,SA2HYC,sBAVN,SAAChF,EAAMiF,GAEtB,OADFF,GAAU/E,GACI,cAATiF,EACMjF,EAAM,EACH,cAATiF,EACMjF,EAAM,EANA,OAhHN,qBA2HNL,GA3HM,MA2HAgF,GA3HA,MA6Hb,OACE,oCACE,kBAAC1I,EAAaiJ,SAAd,CAAuBjF,MAAO,CAAC/D,gBAAgBA,EAAgByD,MAAMA,GAAMF,OAAOA,GAAOnD,KAAKA,EAAK2C,OAAOA,GAAO1C,KAAKA,EAAK4F,QAAQA,EAAQG,MAAMA,EAAMF,SAASA,IAEhK,kBAAC,IAAD,CAAY+C,SAAS,KAErB,kBAACC,EAAA,EAAD,CAAQvK,UAAU,SAAS2F,GAAG,OAAO6E,OAAO,KAAKrK,QAAQ,QACvD,kBAACoK,EAAA,EAAOE,MAAR,qBACA,kBAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,0BAC7B,kBAACJ,EAAA,EAAOK,SAAR,CAAiB5I,GAAG,yBAClB,kBAAC6I,EAAA,EAAD,CAAK7K,UAAU,WACb,kBAAC,IAAD,CAAM8K,GAAG,IAAI9K,UAAU,YAErB,uBAAGA,UAAU,cAAb,WAGF,kBAAC,IAAD,CAAM8K,GAAG,QAAQ9K,UAAU,YAA3B,WAWJ,kBAAC,IAAD,KAEA,kBAAC,IAAD,CAAO+K,KAAK,SACV,kBAAC,EAAD,CAAM5F,MAAOmE,GAAe7B,MAAOA,EAAQhH,aAAcA,EAAcuC,aAAcA,EAAcC,eAAgBA,EAAgBa,YAAaA,EAAaC,UAnErK,WAIED,GAAY,GACZuE,EAAkB,IAClBC,EAAgB,IAChBiB,GAAiBF,IACjBV,GAAc,GACdC,EAAQ,GACRE,IAAU,GACV1E,GAAO,GAGP/C,EAAkBwG,EAAMG,KAAKC,MAAMD,KAAKE,SAAWL,EAAM1F,UAGtB,KADnCa,GADAA,EAAe3B,EAAgBqC,MACHyE,eACXc,QAAQ,MACvBZ,EAAkB,CAAC,OAiDoKjF,iBAAkBA,KAErM,kBAAC,IAAD,CAAO2H,KAAK,KACV,kBAAC,EAAD,Y,YClLZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b67772fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, Alert, Button} from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Rules() {\r\n    let history = useHistory();\r\n\r\n    function handleClick() {\r\n        history.push(\"/play\");\r\n    }\r\n    return (\r\n        <><center>\r\n        <Card className=\"rulesCard\">\r\n            <Card.Body>\r\n            <Alert variant=\"info\">\r\n            <Alert.Heading>Playing Hangman</Alert.Heading>\r\n            <hr />\r\n            <p>\r\n            Hangman is an old school favorite, a word game where the goal is simply to find the missing word or words.</p>\r\n            \r\n            <p>You will be presented with a number of blank spaces representing the missing letters you need to find by guessing one letter at a time.</p>\r\n            <p>Use the keyboard to guess a letter. If your chosen letter exists in the answer, then all places in the answer where that letter appears will be revealed.\r\n            </p>\r\n\r\n            <p>After you've revealed several letters, you may be able to guess what the answer is and fill in the remaining letters. \r\n            </p>\r\n\r\n            <p>Be warned, every time you guess a letter wrong you loose a life and the hangman begins to appear, piece by piece.\r\n            </p>\r\n\r\n            <p>Solve the puzzle before the hangman dies. Remember to keep the theme in mind – it may help you solve the puzzle!\r\n            </p>\r\n            <hr />\r\n            <Button variant=\"outline-info\" className=\"float-right\" onClick={handleClick}> Play <i className=\"pi pi-play\"></i> </Button>\r\n            <br/><br/></Alert>\r\n            </Card.Body>\r\n        </Card></center>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Rules\r\n","import React from 'react'\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n\r\n  return (\r\n    <div className=\"wrong-letters-container\">\r\n      <div>\r\n        {wrongLetters\r\n          .map((letter, i) => <span key={i}>{letter}</span>)\r\n          .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React,{useContext} from 'react'\r\nimport {Card, Alert, Button, OverlayTrigger,Popover} from 'react-bootstrap';\r\nimport {ScoreContext} from '../App';\r\nimport WrongLetters from './WrongLetters';\r\n\r\nfunction Timer({wrongLetters}) {\r\n    const scoreContext = useContext(ScoreContext);\r\n    let temp = scoreContext.selectedWordDef\r\n    return (\r\n        <>\r\n        {console.log(scoreContext)}\r\n        <Card className=\"timerCard\">\r\n        <Card.Header><center><strong>Timer : {scoreContext.time} Seconds</strong></center></Card.Header>\r\n        <Card.Body className=\"timerCardBody\" >\r\n        <Alert variant=\"dark\">\r\n            <h5>Welcome, {scoreContext.name}</h5>\r\n            <hr />\r\n            <p>All the Best....!</p>\r\n            <center>\r\n            <OverlayTrigger\r\n            trigger=\"hover\"\r\n            key='bottom'\r\n            placement='bottom'\r\n            overlay={\r\n                <Popover id='popover-positioned-bottom'>\r\n               \r\n                <Popover.Content>\r\n                    {  (scoreContext.selectedWordDef &&  (scoreContext.selectedWordDef).description)}\r\n                </Popover.Content>\r\n                </Popover>\r\n            }\r\n            >\r\n            <Button variant=\"outline-info\" > Hint <i className=\"pi pi-question-circle\"></i> </Button>\r\n            </OverlayTrigger>\r\n            \r\n            </center><br/></Alert>\r\n            {wrongLetters.length > 0 && \r\n            <Alert variant=\"dark\">\r\n            <h6>Wrong Letters</h6>\r\n            <hr />\r\n            <WrongLetters wrongLetters={wrongLetters} />\r\n            </Alert>}\r\n        </Card.Body>\r\n        </Card>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n  const errors = wrongLetters.length\r\n\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/* <!-- Rod --> */}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n      {/* <!-- Head --> */}\r\n      {errors > 0 &&\r\n        <circle cx=\"140\" cy=\"70\" r=\"20\" />\r\n      }\r\n      {/* <!-- Body --> */}\r\n      {errors > 1 &&\r\n        <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />\r\n      }\r\n      {/* <!-- Arms --> */}\r\n      {errors > 2 &&\r\n        <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />\r\n      }\r\n      {errors > 3 &&\r\n        <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />\r\n      }\r\n      {/* <!-- Legs --> */}\r\n      {errors > 4 &&\r\n        <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />\r\n      }\r\n      {errors > 5 &&\r\n        <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />\r\n      }\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react';\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n\r\n  return (\r\n    <div className=\"word\">\r\n      {selectedWord.split('').map((letter, i) => {\r\n        if(letter===' ')\r\n          return (\r\n            <span className=\"letterSpace\" key={i}>\r\n              {correctLetters.includes(letter) ? letter : ''}\r\n            </span>\r\n          )\r\n        else\r\n          return (\r\n            <span className=\"letter\" key={i}>\r\n              {correctLetters.includes(letter) ? letter : ''}\r\n            </span>\r\n          )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Word\r\n","export function showNotification(setter) {\r\n  setter(true);\r\n  setTimeout(() => {\r\n    setter(false);\r\n  }, 2000);\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = 'win';\r\n\r\n  // Check for win\r\n  word.split('').forEach(letter => {\r\n    if(!correct.includes(letter)){\r\n      status = '';\r\n    }\r\n  });\r\n  \r\n  // Check for lose\r\n  if(wrong.length === 6) status = 'lose';\r\n\r\n  return status\r\n}","import React, { useEffect, useContext } from 'react';\r\nimport { checkWin } from '../helpers/helpers';\r\nimport {ScoreContext} from '../App';\r\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable, playAgain}) => {\r\n  let finalMessage = '';\r\n  let finalMessageRevealWord = '';\r\n  let playable = true;\r\n  const scoreContext = useContext(ScoreContext);\r\n  let temp = scoreContext.selectedWordDef\r\n  if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win' ) {\r\n    finalMessage = 'Congratulations! You won! 😃';\r\n    playable = false;\r\n    scoreContext.setNum(0);\r\n  } else if( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose' ) {\r\n    finalMessage = 'Unfortunately you lost. 😕';\r\n    finalMessageRevealWord = `...the word was: ${temp.word}`;\r\n    playable = false;\r\n    scoreContext.setNum(0);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPlayable(playable);\r\n  });\r\n\r\n  return (\r\n    <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}}>\r\n      <div className=\"popup\">\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{finalMessageRevealWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popup\r\n","import React from 'react'\r\n\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, {useState, useContext} from 'react';\r\nimport CountUp from 'react-countup';\r\nimport {ScoreContext} from '../App';\r\n\r\nfunction ScoreCardCounter() {\r\n    const scoreContext = useContext(ScoreContext);\r\n\r\n    const [time, setTime]=useState(0);\r\n\r\n    function timer(){\r\n        setTime(time+1);\r\n    }\r\n    function startTimer(){\r\n        let interval = setInterval(timer, 1000)\r\n    };\r\n    return (\r\n        <><p>Your Current Score :   <span className=\"setScoreFont\"><strong><CountUp start={scoreContext.pscore} end={scoreContext.score} duration={1}></CountUp>         \r\n            </strong></span>\r\n            </p>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScoreCardCounter\r\n","import React,{useContext} from 'react';\r\nimport {Card, Alert} from 'react-bootstrap';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport { Button } from 'primereact/button';\r\nimport ScoreCardCounter from './ScoreCardCounter';\r\nimport {ScoreContext} from '../App';\r\n\r\nfunction AlphabetList(props) {\r\n    const scoreContext = useContext(ScoreContext);\r\n    var state = props.state;\r\n    function generateButton(value,index){\r\n        var label = String.fromCharCode(65+index);\r\n        var classValue = value ?\"alphButEnable\":\"alphButDisable\"\r\n        return (<><Button label={label} className={classValue} /></>)\r\n    }\r\n    const buttonList=state.map((value,index)=>{return(generateButton(value,index))})\r\n    return (\r\n        <div>\r\n            <div className=\"alphabetList\">\r\n                <Card\r\n                    bg = \"light\"\r\n                    key=\"1\"\r\n                    text=\"dark\"\r\n                    style={{width:'15.5rem'}}\r\n                    >\r\n                        <Card.Header className=\"alphaCard\"><ScoreCardCounter></ScoreCardCounter></Card.Header>\r\n                        <Card.Body className=\"alphaCard1\">\r\n                        <Alert variant=\"dark\"><center>\r\n                            Alphabet List\r\n                            <hr />                      \r\n                                {buttonList}</center>\r\n                         </Alert>   \r\n                        </Card.Body>\r\n                    </Card>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlphabetList\r\n","import React,{useEffect, useState, useContext} from 'react'\r\nimport {Alert, Button, Modal, Form} from 'react-bootstrap';            \r\nimport { useHistory } from \"react-router-dom\";\r\nimport {ScoreContext} from '../App';\r\n\r\nfunction StartPopup() {\r\n    const scoreContext = useContext(ScoreContext);\r\n    const [show, setShow] = useState(scoreContext.name==null);\r\n    const [uname, setUname] = useState(null);\r\n    const [utheme, setUtheme] = useState(\"technology\");\r\n    let history = useHistory();\r\n\r\n    function handleRules() {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const handleClose = () => {\r\n        if(uname!=null && uname != ''){\r\n        scoreContext.setName(uname)\r\n        scoreContext.setTheme(utheme)\r\n        setShow(false);}\r\n    }\r\n    return (\r\n        <div>\r\n        {/* <Button variant=\"primary\" onClick={handleShow}>\r\n            Launch static backdrop modal\r\n        </Button> */}\r\n        <Modal\r\n            show={show}\r\n            backdrop=\"static\"\r\n            keyboard={false}>\r\n            <Modal.Header>\r\n            <Modal.Title>Welcome to Hangman</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Alert variant=\"info\">\r\n            \r\n            <Form>\r\n                <Form.Group controlId=\"formGridName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"text\" placeholder=\"Enter your Name\" onChange={e=>setUname(e.target.value)}/>\r\n                    {/* <input type=\"text\" size=\"sm\" className=\"form-control\" placeholder=\"Enter your Name\"  /> */}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Theme\">\r\n                <Form.Label>Theme</Form.Label>\r\n                <Form.Control as=\"select\" defaultValue=\"Choose a Theme\" size=\"sm\" onChange={e=>setUtheme(e.target.value)}>\r\n                    <option value=\"technology\">Choose a Theme</option>\r\n                    <option value=\"technology\">Technology/Programming languages</option>\r\n                    <option value=\"social\">Social Media</option>\r\n                </Form.Control>\r\n                </Form.Group>\r\n                </Form>\r\n                \r\n            </Alert>   \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"outline-dark\" onClick={handleRules}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"outline-info\" onClick={handleClose}> Play </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n               \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartPopup\r\n","import React, { useState, useEffect,useReducer } from 'react';\r\nimport Timer from './Timer';\r\nimport Figure from './Figure';\r\nimport Word from './Word';\r\nimport Popup from './Popup';\r\nimport Notification from './Notification';\r\nimport AlphabetList from './AlphabetList';\r\nimport {Card} from 'react-bootstrap';\r\nimport StartPopup from './StartPopup';\r\n\r\nfunction Play({state,theme, correctLetters, wrongLetters, selectedWord, setPlayable, playAgain, showNotification}) {\r\n    \r\n    console.log(theme)\r\n    return (\r\n        <>\r\n        <StartPopup></StartPopup>\r\n        <div className=\"setAllCards\">\r\n        <Timer wrongLetters={wrongLetters}/>\r\n        <center>\r\n        <Card className=\"gameCard\">\r\n        <br/><center>\r\n        <h2>Hangman</h2><br></br>\r\n        <Card.Subtitle className=\"text-muted\">Find the hidden word - Enter a letter</Card.Subtitle></center>\r\n        \r\n        <div className=\"game-container\">\r\n            <Figure wrongLetters={wrongLetters} />\r\n            {/* <WrongLetters wrongLetters={wrongLetters} /> */}\r\n            <Word selectedWord={selectedWord} correctLetters={correctLetters} />\r\n        </div><br></br>\r\n        \r\n        <br/>\r\n        </Card></center>\r\n        <AlphabetList state={state}></AlphabetList>\r\n\r\n        <Notification showNotification={showNotification} />\r\n        <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\r\n        </div></>\r\n    )\r\n}\r\n\r\nexport default Play\r\n","import React, { useState, useEffect,useReducer } from 'react';\r\nimport Rules from './components/Rules';\r\nimport Play from './components/Play';\r\nimport { showNotification as show, checkWin } from './helpers/helpers';\r\nimport {Nav, Navbar} from 'react-bootstrap'\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport myData from './QuizWords.json';\r\n\r\nexport const ScoreContext = React.createContext();\r\n\r\nlet words= myData.technology;\r\nlet selectedWordDef = words[Math.floor(Math.random() * words.length)];\r\nlet selectedWord = selectedWordDef.word\r\nselectedWord = selectedWord.toLowerCase()\r\n\r\nfunction App() {\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [wrongLetters, setWrongLetters] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const [name, setName] = useState(null);\r\n  const [theme, setTheme] = useState(\"technology\");\r\n  const [wordSel,setWordSel]=useState(false);\r\n  const [resetTimer,setResetTimer]=useState(true);\r\n  const [time,setTime] = useState(0);\r\n  var doStart=0;\r\n  const [nstart, setNstart]=useState(false);\r\n  const [num, setNum]=useState(1);\r\n\r\n  useEffect(()=>{\r\n    if(theme === \"social\"){\r\n      words = myData.social\r\n      console.log(words)\r\n      selectedWordDef = words[Math.floor(Math.random() * words.length)];\r\n      selectedWord = selectedWordDef.word;\r\n      selectedWord = selectedWord.toLowerCase();\r\n      setWordSel(true)\r\n    }\r\n    if (selectedWord.indexOf(' ') !== -1) {\r\n      setCorrectLetters([\" \"]);\r\n    } \r\n  },[theme])\r\n\r\n\r\n\r\n  useEffect(()=> {\r\n    if(nstart){\r\n      \r\n      const timer = time < 10000 && resetTimer && setInterval(() => setTime(time+num), 1000);\r\n      console.log(timer);\r\n      console.log(num);\r\n      return() => {\r\n        console.log(\"Calling return..\");\r\n        clearInterval(timer)\r\n        setResetTimer(true)\r\n      };\r\n    }\r\n  },[time,resetTimer,nstart]);\r\n\r\n  var initAlphabetState=[]\r\n  for(var i =0;i<26;i++){\r\n    initAlphabetState.push(true)\r\n  }\r\n  const [alphabetState, setAlphabetState]=useState(initAlphabetState);\r\n\r\n  function updateAlphabet(value){\r\n    var newKeyCode = value-65;\r\n    var newState = alphabetState;\r\n    newState[newKeyCode]=false;\r\n    setAlphabetState(newState);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(name == null)\r\n      return\r\n    const handleKeydown = event => {\r\n      setNstart(true);\r\n      const { key, keyCode } = event;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        updateAlphabet(keyCode);\r\n        const letter = key.toLowerCase();\r\n        if (selectedWord.includes(letter)) {\r\n          if (!correctLetters.includes(letter)) {\r\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\r\n            dispatch('increment');\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        } else {\r\n          if (!wrongLetters.includes(letter)) {\r\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\r\n            dispatch('decrement');\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => window.removeEventListener('keydown', handleKeydown);\r\n  }, [correctLetters, wrongLetters, playable, alphabetState,name,wordSel]);\r\n\r\n  function playAgain() {\r\n    \r\n\r\n    // Empty Arrays\r\n    setPlayable(true);\r\n    setCorrectLetters([]);\r\n    setWrongLetters([]);\r\n    setAlphabetState(initAlphabetState);\r\n    setResetTimer(false);\r\n    setTime(0);\r\n    setNstart(false);\r\n    setNum(1);\r\n    // const random = Math.floor(Math.random() * words.length);\r\n    // selectedWord = words[random];\r\n    selectedWordDef = words[Math.floor(Math.random() * words.length)];\r\n    selectedWord = selectedWordDef.word\r\n    selectedWord = selectedWord.toLowerCase() \r\n    if (selectedWord.indexOf(' ') !== -1) {\r\n      setCorrectLetters([\" \"]);\r\n    } \r\n    \r\n  }\r\n\r\n  const [pscore,setPscore] = useState(0);\r\n  const scoreInitial=0;\r\n  const scoreReducer=(state,action)=>{\r\n    setPscore(state)\r\n      if(action==='increment')\r\n        return(state+5);\r\n      if(action==='decrement')\r\n        return(state-3);\r\n      else\r\n        return(scoreInitial);\r\n  }\r\n\r\n  const [score,dispatch] = useReducer(scoreReducer,scoreInitial)\r\n\r\n  return (\r\n    <>\r\n      <ScoreContext.Provider value={{selectedWordDef:selectedWordDef,score:score,pscore:pscore,time:time,setNum:setNum,name:name,setName:setName,theme:theme,setTheme:setTheme}}>\r\n      \r\n      <HashRouter basename=\"/\">\r\n      \r\n      <Navbar className='NavBar' bg=\"dark\" expand=\"sm\" variant=\"dark\">\r\n        <Navbar.Brand >Hangman Game</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/\" className=\"linkData\">\r\n            {/* <Nav.Link >  */}\r\n              <i className=\"pi pi-home\"> Rules</i>\r\n              {/* </Nav.Link> */}\r\n            </Link>\r\n            <Link to=\"/play\" className=\"linkData\">\r\n            {/* <Nav.Link > */}\r\n              Play\r\n              {/* </Nav.Link> */}\r\n            </Link>\r\n            {/* <Nav.Link href=\"#/\"> <i className=\"pi pi-home\"> Rules</i></Nav.Link>\r\n            <Nav.Link href=\"#/play\">Play</Nav.Link> */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      \r\n        <Switch>\r\n\r\n        <Route path=\"/play\">\r\n          <Play state={alphabetState} theme={theme}  wrongLetters={wrongLetters} selectedWord={selectedWord} correctLetters={correctLetters} setPlayable={setPlayable} playAgain={playAgain} showNotification={showNotification}/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Rules />\r\n          </Route>\r\n        </Switch>\r\n    </HashRouter>\r\n    </ScoreContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'primeicons/primeicons.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}